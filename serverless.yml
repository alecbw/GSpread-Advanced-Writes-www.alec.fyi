
service: s3-sync-cron

provider:
  name: aws
  runtime: python3.7
  stage: prod
  region: us-west-1
  logRetentionInDays: 120
  versionFunctions: false
  memorySize: 1024
  timeout: 10
  tags:
    deployment: serverless.com

  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:ListBucket
        - s3:GetBucketLocation
      Resource:
        - arn:aws:s3:::gsheet-backup-bucket-${env:AWS_ACCOUNT_ID}/*

functions:
  s3-sync:
    handler: s3_gsheets_sync_handler.lambda_handler
    events:
      - schedule: cron(0 18 ? * SUN *) # Sun at 11 am PST (18 UTC -7 correction)
  gsheet-write:
    handler: gsheet_write_handler.lambda_handler


resources:
  Resources:
    gsheet-backup-bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: gsheet-backup-bucket-${env:AWS_ACCOUNT_ID}
        AccessControl: Private
        CorsConfiguration:
          CorsRules:
          - AllowedMethods:
            - GET
            - PUT
            - POST
            - HEAD
            AllowedOrigins:
            - "*"
            AllowedHeaders:
            - "*"
            MaxAge: 3000
